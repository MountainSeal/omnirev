

module Omnirev.AbsOmnirev where

-- Haskell module generated by the BNF converter




newtype Ident = Ident String deriving (Eq, Ord, Show, Read)
data Program = Prog [Def]
  deriving (Eq, Ord, Show, Read)

data Def = DType Ident Type | DTerm Ident Type Term
  deriving (Eq, Ord, Show, Read)

data Type
    = TVar Ident
    | TUnit
    | TSum Type Type
    | TTensor Type Type
    | TPar Type Type
    | TFunc Type Type
    | TInd Ident Type
  deriving (Eq, Ord, Show, Read)

data Value
    = VVar Ident
    | VUnit
    | VLeft Value
    | VRight Value
    | VTensor Value Value
    | VPar Value Value
    | VArrow Value Value
    | VFold Value
  deriving (Eq, Ord, Show, Read)

data Term
    = TmApp Term Term | TmComp Term Term | TmTrans Term | TmMeas Term
  deriving (Eq, Ord, Show, Read)

