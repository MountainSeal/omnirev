--Entire Program
Prog . Program ::= [Def] ;
entrypoints Program ;
comment "//" ;
comment "/*" "*/" ;

--Definition
DType . Def ::= "type" Ident "=" Type ;
DFunc . Def ::= "func" Ident ":" Type "<->" Type "=" Func ;
DExpr . Def ::= "expr" Ident ":" Type "=" Expr ;
(:[]) . [Def] ::= Def ;
(:)   . [Def] ::= Def [Def] ;

--Expression
EUnit   . Expr3 ::= "()" ;
ETensor . Expr2 ::= Expr2 "*" Expr3 ;
ESum    . Expr1 ::= Expr1 "+" Expr2 ;
ELeft   . Expr3 ::= "inl" Expr3 ;
ERight  . Expr3 ::= "inr" Expr3 ;
EStar   . Expr3 ::= "~" Expr3 ;
ERec    . Expr3 ::= "µ" Ident "." Expr3 ;
EVar    . Expr3 ::= Ident ;
EApp    . Expr3 ::= Func Expr3 ;
EProj   . Expr3 ::= "measure" Expr3 ;
coercions Expr 3 ;

--Type
TUnit   . Type3 ::= "unit" ;
TTensor . Type2 ::= Type2 "*" Type3 ;
TSum    . Type1 ::= Type1 "+" Type2 ;
TStar   . Type3 ::= "~" Type3 ;
TRec    . Type3 ::= "µ" Ident "." Type ;
TVar    . Type3 ::= Ident ;
coercions Type 3 ;

--Function
FId        . Func4 ::= "id" ;
FComp      . Func1 ::= Func1 ";" Func2 ;
FTensor    . Func3 ::= Func3 "*" Func4 ;
FTensUnit  . Func4 ::= "unit*" ;
FTensAssoc . Func4 ::= "assoc*" ;
FTensSym   . Func4 ::= "sym*" ;
FSum       . Func2 ::= Func2 "+" Func3 ;
FSumAssoc  . Func4 ::= "assoc+" ;
FSumSym    . Func4 ::= "sym+" ;
FDistrib   . Func4 ::= "distrib" ;     
FEval      . Func4 ::= "eval" Type ;
FStar      . Func4 ::= "~" Func;
FDagger    . Func4 ::= "^" Func4 ;
FUnfold    . Func4 ::= "unfold" Type ;
FVar       . Func4 ::= Ident ;
coercions Func 4 ;