--Entire Program
Prog . Program ::= [Def] ;
entrypoints Program ;
comment "//" ;
comment "/*" "*/" ;

--Definition
DType . Def ::= "type" Ident "=" Type ;
DTerm . Def ::= "term" Ident ":" Type "=" Term ;
(:[]) . [Def] ::= Def ;
(:)   . [Def] ::= Def [Def] ;

--Type
TVar    . Type5 ::= Ident ;
TUnit   . Type5 ::= "I" ;
TSum    . Type3 ::= Type3 "(+)" Type4 ;
TTensor . Type4 ::= Type4 "(*)" Type5 ;
TPar    . Type1 ::= Type1 "||" Type2 ;
TFunc   . Type2 ::= Type2 "~>" Type3 ;
TInd    . Type5 ::= "fix" Ident "." Type5 ;
coercions Type 5 ;

--Value
VVar    . Value4 ::= Ident ;
VUnit   . Value4 ::= "()" ;
VLeft   . Value4 ::= "inl" Value4 ;
VRight  . Value4 ::= "inr" Value4 ;
VTensor . Value3 ::= Value3 "*" Value4 ;
VPar    . Value1 ::= Value1 "|" Value2 ;
VArrow  . Value2 ::= Value2 "->" Value3 ;
VFold   . Value4 ::= "fold" Value4 ;
coercions Value 4 ;

--Term
TmVal   . Term3 ::= Value ;
TmApp   . Term2 ::= Term2 Term3 ;
TmComp  . Term1 ::= Term1 ";" Term2 ;
TmTrans . Term3 ::= "~" Term3 ;
TmMeas  . Term3 ::= "measure" Term3 ;
coercions Term 3 ;